{"mappings":"AAAA,0CAA0C;AAC1C,eAAe;IACb,IAAG;QACH,MAAM,UAAU,MAAM,MAAM;QAC5B,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,KAAK,SAAS,cAAc,CAAC;QACnC,IAAI,CAAC,IAAI;YACP,QAAQ,KAAK,CAAC;YACd;QACF;QAGA,GAAG,SAAS,GAAG,IAA6B,eAAe;QAE3D,KAAK,OAAO,CAAC,CAAA;YACX,MAAM,KAAK,SAAS,aAAa,CAAC,OAAQ,qBAAqB;YAE/D,MAAM,cAAc,mBAAmB,CAAC,SAAS,EAAE,GAAG,WAAW,CAAC,CAAC;YACnE,MAAM,eAAe,mBAAmB,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,CAAC;YACnE,MAAM,eAAe,mBAAmB,CAAC,UAAU,EAAE,GAAG,QAAQ,CAAC,CAAC;YAEjE,mCAAmC;YACnC,GAAG,WAAW,CAAC;YACf,GAAG,WAAW,CAAC;YACf,GAAG,WAAW,CAAC;YACf,GAAG,WAAW,CAAC;YAEf,GAAG,WAAW,CAAC,KAA2B,oCAAoC;QAChF;IAGH,EAAE,OAAO,OAAM;QACb,QAAQ,KAAK,CAAC,2CAAwC;IACxD;AACA;AACE,kCAAkC;AAClC","sources":["src/main.js"],"sourcesContent":["//Formulär för att hämta data från servern\nasync function fetchCvs(){\n  try{\n  const respone = await fetch(\"localhost:3000/cv\");\n  const data = await respone.json();\n  \n  const ul = document.getElementById(\"cv-list\");\n  if (!ul) {\n    console.error(\"UL element not found\");\n    return;\n  }\n\n\n  ul.innerHTML = \"\";                          //Rensar listan\n\n  data.forEach(cv => {\n    const li = document.createElement('li');  //Skapar <li>-element\n\n    const companySpan = createSpanWithText(`Company: ${cv.companyname}`);\n    const jobTitleSpan = createSpanWithText(`Job Title: ${cv.jobtitle}`);\n    const locationSpan = createSpanWithText(`Location: ${cv.location}`);\n\n     // Lägg till spans i <li>-elementet\n     li.appendChild(companySpan);\n     li.appendChild(jobTitleSpan);\n     li.appendChild(locationSpan);\n     li.appendChild(deleteBtn);\n \n     ul.appendChild(li);                       //Lägger till <li>-element till <ul>\n   });\n \n\n} catch (error){\n  console.error(\"Fel uppstod vid hämtning av CV-data:\", error);\n}\n}\n  // Ladda in CV:er när sidan laddas\n  fetchCvs();"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}